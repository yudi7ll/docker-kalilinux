#!/bin/env bash

KALI_ENV_PATH="$HOME/dev/docker-kalilinux/.env"
export $(grep -v '^#' $KALI_ENV_PATH | xargs)

# options
case $1 in
	commit) docker commit $CONTAINER_NAME $IMAGE_NAME;;
	reboot) docker commit $CONTAINER_NAME $IMAGE_NAME && docker stop $CONTAINER_NAME && docker container rm $CONTAINER_NAME;;
	fast-reboot) docker stop $CONTAINER_NAME && docker container rm $CONTAINER_NAME;;
esac

function boot() {
	docker run -td \
		--privileged \
		--net host \
		--name $CONTAINER_NAME \
		--security-opt label=type:container_runtime_t \
		-e DISPLAY=$DISPLAY \
		-e _JAVA_OPTIONS='-Dswing.aatext=TRUE -Dawt.useSystemAAFontSettings=on' \
		-e WAYLAND_DISPLAY=$WAYLAND_DISPLAY \
		-e XDG_RUNTIME_DIR=$XDG_RUNTIME_DIR \
		-e JAVA_HOME=/usr/lib/jvm/default \
		-e TERM=xterm-kitty \
		-u $(id -u):$(id -g) \
		-v /etc/hosts:/etc/hosts \
		-v /tmp/:/tmp/ \
		-v /run/user/1000:/run/user/1000 \
		-v $HOME/Downloads:$HOME/Downloads \
		-v $HOME/dev:$HOME/dev \
		-v $HOME/.Xauthority:$HOME/.Xauthority \
		$IMAGE_NAME
}

# if container doesn't exist
[[ -z `docker ps -aqf name=${CONTAINER_NAME}` ]] && boot

# if container stopped
[[ -z `docker ps -qf name=${CONTAINER_NAME}` ]] && docker start $CONTAINER_NAME

# Start the necessary services
docker exec -du root $CONTAINER_NAME service binfmt-support start

# if the pwd is not exists
if [[ `docker exec -ti ${CONTAINER_NAME} ls "$(pwd)"` == *"cannot access"* ]]; then
	echo "Redirected to $HOME"
	docker exec -ti -w "${HOME}" $CONTAINER_NAME /usr/bin/zsh
	exit
fi

docker exec -ti -w "`pwd`" $CONTAINER_NAME /usr/bin/zsh
